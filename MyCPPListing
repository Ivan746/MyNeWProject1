
#include "stdafx.h"
#include <iostream>
#include <cstdio>
#include <conio.h>
#include <cstring>

void MagStr (char *str)
{

	int i, j;
	int flag = 0;
	char space = ' ';

	int strlen_str = strlen(str);

	for(i = 0, j = 0; i < strlen_str; i++){
		if((str[i] != space) && (str[i] != '\t')){

			if(((flag == 0) || ((str[i - 1] != ' ') && (str[i - 1] != '\t')))){
				str[j] = str[i];
				j++;
				flag = 1;
				continue;
			} 

			if((str[i - 1] == ' ') || (str[i - 1] == '\t')){
				str[j] = ' ';
				str[j + 1] = str[i];
				j += 2;
				continue;
			}
		}
	}

	if(j > 1){
		str[j] = '\0';
	} else {
		str[0] = 0;
	}

}

void Bias(char *str, int count_str, int *x, int *y)
{
	static const char West[]  = "Запад";
	static const char East[]  = "Восток";
	static const char North[] = "Север";
	static const char South[] = "Юг";
	
	int Strlen_Str = strlen(str);

	if (Strlen_Str > 0){

		char space = ' ';
		int i, j;

		char *adr_space = NULL;
		adr_space = strchr(str, space);

		if(adr_space != NULL){

			char buffer[5] = {};

			int Numb_simv = adr_space - str;

			strcpy(buffer, adr_space + 1);

			if (!strncmp(North, str, Numb_simv)){
				*y += atoi(buffer);
			} else {

				if (!strncmp(South, str, Numb_simv)){
					*y -= atoi(buffer);
				} else {

					if (!strncmp(East, str, Numb_simv)){
						*x += atoi(buffer);
					} else {

						if (!strncmp(West, str, Numb_simv)){
							*x -= atoi(buffer);
						} else {
							printf("Cтрока № %i не совпадает ни с 1 из сторон света\n", count_str);
						}
					}
				}
			}
		} else {
			 printf("Cтрока № %i состоит из 1 слова\n", count_str);
		}
	} else {
		printf("Cтрока № %i пустая\n", count_str);
	}
}

int _tmain(int argc, _TCHAR* argv[])
{
	if (argc > 1){

		setlocale(LC_CTYPE,"Russian_Russia.1251");

		FILE *file;
		file = fopen(argv[1], "r");
	
		if(file != 0){
			
			int x = 0, y = 0;

			fseek(file, 0, SEEK_END);
			int Numb_Elem_File = ftell(file);
			rewind(file);

			char *buffer = (char*) malloc(sizeof(char) * Numb_Elem_File);
			if( buffer != NULL){

				int count_str = 0;
	
				while(!feof(file)){
					fgets(buffer, Numb_Elem_File, file);
					MagStr(buffer);
					Bias(buffer, count_str, &x, &y);
					count_str++;
				}

				printf("Финальная координата = %d, %d \n", x, y);

				free(buffer);
			} else {
				printf("Файл %s имеет слишком большой размер. Недостаточно памяти\n", argv[1]);
			}
		} else {
			printf("Ошибка открытия файла %s", argv[1]);
		}
	} else {
		printf("Файл с координатами не получен\n");
		printf("Для работы с данным продуктом пожалуйста укажите путь к текстовому файлу содержащему координаты\n");
	}

	system("pause");
}
